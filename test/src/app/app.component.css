@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');

:root {
  --primary-color: #66c0f4;
  --primary-hover: #4fb3f4;
  --background-dark: #1B2838;
  --background-light: #2a3f5a;
  --text-primary: #e6e6e6;
  --text-secondary: #8f98a0;
  --accent-color: #5c7cff;
  --danger-color: #e74c3c;
  --success-color: #2ecc71;
  --border-radius: 6px;
  --transition: all 0.2s ease;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Inter', sans-serif;
  background-color: var(--background-dark);
  color: var(--text-primary);
  line-height: 1.6;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

/* Header Styles */
header {
  background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);
  padding: 0.75rem 1.5rem;
  color: var(--text-primary);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
  position: sticky;
  top: 0;
  z-index: 1000;
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border-bottom: 1px solid rgba(255, 255, 255, 0.05);
}

nav {
  max-width: 1400px;
  margin: 0 auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem 0;
}

/* Brand Styles */
.nav-brand {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--primary-color);
  text-decoration: none;
  transition: var(--transition);
}

.nav-brand:hover {
  color: var(--primary-hover);
  transform: translateY(-1px);
}

.nav-brand i {
  font-size: 1.8rem;
}

/* Navigation Links */
.nav-links {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.nav-links a {
  color: var(--text-secondary);
  text-decoration: none;
  padding: 0.6rem 1.25rem;
  border-radius: var(--border-radius);
  font-weight: 500;
  font-size: 0.95rem;
  transition: var(--transition);
  display: flex;
  align-items: center;
  gap: 0.5rem;
  position: relative;
  overflow: hidden;
}

.nav-links a i {
  font-size: 1.2rem;
}

.nav-links a::before {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 2px;
  background: var(--primary-color);
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 0.3s ease;
}

.nav-links a:hover {
  color: var(--text-primary);
  background: rgba(255, 255, 255, 0.05);
}

.nav-links a:hover::before {
  transform: scaleX(1);
  transform-origin: left;
}

.nav-links a.active {
  color: var(--primary-color);
  background: rgba(43, 232, 255, 0.1);
}

.nav-links a.active::before {
  transform: scaleX(1);
}

/* User Actions */
.user-actions {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.user-avatar {
  width: 36px;
  height: 36px;
  border-radius: 50%;
  object-fit: cover;
  border: 2px solid var(--primary-color);
  cursor: pointer;
  transition: var(--transition);
}

.user-avatar:hover {
  transform: scale(1.05);
  box-shadow: 0 0 0 3px rgba(43, 232, 255, 0.3);
}

/* Main Content */
main {
  flex: 1;
  min-height: calc(100vh - 72px); /* Assuming header is approx 72px */
  padding: 2rem;
  background: linear-gradient(to bottom, #0f172a, #1e293b);
  /* max-width: 1400px; /* This will be handled by .main-layout or .content-area */
  /* margin: 0 auto; /* This will be handled by .main-layout */
  width: 100%;
}

/* Responsive Adjustments for existing main content */
@media (max-width: 768px) {
  nav {
    flex-direction: column;
    gap: 1rem;
    padding: 1rem;
  }
  
  .nav-links {
    width: 100%;
    justify-content: center;
    flex-wrap: wrap;
  }
  
  .user-actions {
    margin-top: 1rem;
  }
  
  main {
    padding: 1rem;
  }
}

/* Layout for main content and wishlist sidebar */
.main-layout {
  display: flex;
  max-width: calc(1400px + 300px + 1rem); /* Max-width of main content + sidebar width + gap */
  margin: 0 auto;
  padding: 0 1rem; /* Consistent padding */
  gap: 1rem; /* Space between content and sidebar */
  width: 100%;
  align-items: flex-start; /* Align items to the top */
}

/* Adjust existing main (now .content-area) styles */
main.content-area { /* More specific selector from app.component.ts template */
  flex: 1; /* Takes up remaining space */
  min-width: 0; /* Allows shrinking if necessary */
  max-width: 1400px; /* Restore original max-width for content area itself */
  margin: 0; /* Override previous auto margins from 'main' */
  /* padding: 2rem; /* Already defined in 'main', check if duplication is intended or if one should be removed/adjusted */
  /* background: linear-gradient(to bottom, #0f172a, #1e293b); /* Already defined in 'main' */
}

app-wishlist-sidebar {
  /* Sidebar width is defined in its own component's SCSS (300px) */
  position: sticky; /* Make sidebar sticky */
  top: 88px; /* Adjust based on header height (e.g., 72px + 1rem padding/gap from .main-layout) */
  height: calc(100vh - 88px); /* Full height minus header and top offset */
  /* Ensure it doesn't exceed viewport height if content is shorter */
  max-height: calc(100vh - 88px);
  overflow-y: auto; /* If sidebar content itself is too long */
}

/* Responsive adjustments for main layout with sidebar */
@media (max-width: 991px) { /* Breakpoint where sidebar stacks */
  .main-layout {
    flex-direction: column;
    align-items: center; /* Center items when stacked */
    padding: 0 0.5rem; /* Adjust padding for smaller screens */
  }

  main.content-area {
    width: 100%; /* Full width when stacked */
    /* max-width: 1400px; /* Already set */
    margin-bottom: 1rem; /* Space below content before sidebar */
    padding: 1rem; /* Adjust padding for content area on smaller screens */
  }

  app-wishlist-sidebar {
    width: 100%;
    max-width: 600px; /* Or a suitable max-width for stacked sidebar */
    position: static; /* Non-sticky when stacked */
    height: auto; /* Adjust height as needed */
    max-height: none; /* Remove max-height when stacked */
    border-left: none; /* Remove left border if it looks odd when stacked */
    border-top: 1px solid var(--theme-color2, #003f69); /* Optional top border */
    margin-top: 1rem;
    padding: 1rem; /* Add padding to sidebar when stacked */
  }
}
